<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lynu.mapper.XzpfMapper">
<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
  <resultMap id="BaseResultMap" type="cn.lynu.model.Xzpf">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="yansou_team_id" jdbcType="INTEGER" property="yansouteamId" />
    <result column="teacher_id" jdbcType="CHAR" property="teacherId" />
    <result column="student_id" jdbcType="CHAR" property="studentId"/>
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>

  <insert id="insertXzpf" parameterType="cn.lynu.model.Xzpf">
    insert into xzpf (id, yansou_team_id, teacher_id,student_id
                                score)
    values (#{id,jdbcType=INTEGER}, #{yansouteamId,jdbcType=INTEGER}, #{teacherId,jdbcType=CHAR},#{studentId,jdbcType=CHAR},
            #{score,jdbcType=INTEGER})
  </insert>

  <insert id="insertSelectiveXzpf" parameterType="cn.lynu.model.Xzpf">
    insert into xzpf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="yansouteamId != null">
        yansou_team_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="yansouteamId != null">
        #{yansouteamId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=CHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=CHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateScore">
  update xzpf set  score=#{score} where teacher_id=#{teacherId} and student_id=#{studentId}
  </update>

  <delete id="deleteXzpf">
    delete from xzpf
    where teacher_id = #{teacherId,jdbcType=CHAR} and student_id =#{studentId,jdbcType=CHAR}
  </delete>

  <delete id="deleteXzpfAll">
    delete from xzpf
    where  student_id =#{studentId,jdbcType=CHAR}
  </delete>
  <sql id="Base_Column_List">
    id, yansou_team_id,teacher_id, student_id, score
  </sql>
  <select id="selectXzpfByStudentId" resultType="cn.lynu.model.Xzpf">
    select
    <include refid="Base_Column_List"></include>
    from xzpf
    where  student_id=#{studentId,jdbcType=CHAR}
  </select>

  <select id="getXzpf" resultType="cn.lynu.model.Xzpf">
    select
    <include refid="Base_Column_List"></include>
    from xzpf
    where  student_id=#{studentId,jdbcType=CHAR}
    and    teacher_id=#{teacherId,jdbcType=CHAR}
  </select>

  <update id="updateXzpf" parameterType="cn.lynu.model.Xzpf">
    update xzpf
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="yansouteamId != null">
        yansou_team_id = #{yansouteamId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=CHAR},
      </if>
      <if test="studentId != null">
          student_id=#{studentId,jdbcType=CHAR},
      </if>
      <if test="score != null">
        score=#{score,jdbcType=INTEGER}
      </if>
    </set>
    where id=#{id,jdbcType=INTEGER}
  </update>
</mapper>